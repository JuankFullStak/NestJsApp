// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  name       String?
  password   String
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  Progress   Progress[]
}

model Category {
  id          Int       @id @default(autoincrement())
  title       String    @unique
  description String?
  image       String?
  Chapter     Chapter[]
}

model Chapter {
  id         Int        @id @default(autoincrement())
  name       String     @unique
  body       String?
  category   Category   @relation(fields: [categoryId], references: [id])
  categoryId Int
  Resource   Resource[]
  Question   Question[]
}

model Resource {
  id        Int      @id @default(autoincrement())
  originalName String?
  fileName   String?
  chapter   Chapter  @relation(fields: [chapterId], onDelete: Cascade, onUpdate: Cascade, references: [id])
  chapterId Int
  path      String
  type      FileType @default(IMAGE)
}

enum FileType {
  IMAGE
  AUDIO
  VIDEO
}

model Question {
  id        Int     @id @default(autoincrement())
  chapter   Chapter @relation(fields: [chapterId], onDelete: Cascade, onUpdate: Cascade, references: [id])
  chapterId Int
  body      String?

  Option   Option[]
  Progress Progress[]
}

model Option {
  id          Int      @id @default(autoincrement())
  question    Question @relation(fields: [question_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  question_id Int
  body        String
  correct     Boolean
}

model Progress {
  id          Int      @id @default(autoincrement())
  question    Question @relation(fields: [question_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  question_id Int
  user        User     @relation(fields: [user_id], references: [id])
  user_id     Int
  score       Int
  opened      Boolean
  finished    Boolean
}
